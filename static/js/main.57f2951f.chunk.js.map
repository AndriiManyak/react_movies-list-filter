{"version":3,"sources":["components/MovieSearch/MovieSearch.js","components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","App.js","index.js"],"names":["MovieSearch","query","handleChange","className","htmlFor","type","id","placeholder","value","onChange","MovieCard","title","description","imgUrl","imdbUrl","src","alt","href","defaultProps","MoviesList","React","memo","filteredMovies","movies","filter","movie","isTitle","toLowerCase","includes","trim","isDescription","map","key","imdbId","App","state","event","setState","target","this","moviesFromServer","Component","ReactDOM","render","document","getElementById"],"mappings":"8vEAGaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAV,OACzB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOC,QAAQ,eAAeD,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEE,KAAK,OACLC,GAAG,eACHH,UAAU,QACVI,YAAY,mBACZC,MAAOP,EACPQ,SAAUP,QCbPQ,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKX,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEY,IAAKF,EACLG,IAAI,gBAIV,yBAAKb,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEY,IAAI,wBACJC,IAAI,WAIV,yBAAKb,UAAU,iBACb,uBAAGA,UAAU,cAAcQ,KAI/B,yBAAKR,UAAU,WACZS,EACD,6BACA,uBAAGK,KAAMH,GAAT,aAaRJ,EAAUQ,aAAe,CACvBN,YAAa,ICxCR,IAAMO,EAAaC,IAAMC,MAC9B,YAAwB,IAArBpB,EAAoB,EAApBA,MACKqB,EADe,EAAbC,OACsBC,QAAO,SAACC,GACpC,IAAMC,EAAUD,EAAMd,MACnBgB,cACAC,SACC3B,EACG4B,OACAF,eAGDG,EAAgBL,EAAMb,YACzBe,cACAC,SACC3B,EACG4B,OACAF,eAGP,OAAOD,GAAWI,KAGpB,OACE,yBAAK3B,UAAU,UACZmB,EAAeS,KAAI,SAAAN,GAAK,OACvB,kBAAC,EAAD,eAAWO,IAAKP,EAAMQ,QAAYR,WAmB5CN,EAAWD,aAAe,CACxBK,OAAQ,IAGKH,IAAMC,KAAKF,GAAXC,I,OC9CFc,G,MAAb,4MACEC,MAAQ,CACNlC,MAAO,IAFX,EAKEC,aAAe,SAACkC,GACd,EAAKC,SAAS,CACZpC,MAAOmC,EAAME,OAAO9B,SAP1B,uDAWY,IACAP,EAAUsC,KAAKJ,MAAflC,MAER,OACE,yBAAKE,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEF,MAAOA,EACPC,aAAcqC,KAAKrC,eAGrB,kBAAC,EAAD,CACED,MAAOA,EACPsB,OAAQiB,KAGZ,yBAAKrC,UAAU,WAAf,0BA3BR,GAAyBsC,cCHzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.57f2951f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const MovieSearch = ({ query, handleChange }) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      <label htmlFor=\"search-query\" className=\"label\">\n        Search movie\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type search word\"\n          value={query}\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nMovieSearch.propTypes = {\n  query: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = React.memo(\n  ({ query, movies }) => {\n    const filteredMovies = movies.filter((movie) => {\n      const isTitle = movie.title\n        .toLowerCase()\n        .includes(\n          query\n            .trim()\n            .toLowerCase(),\n        );\n\n      const isDescription = movie.description\n        .toLowerCase()\n        .includes(\n          query\n            .trim()\n            .toLowerCase(),\n        );\n\n      return isTitle || isDescription;\n    });\n\n    return (\n      <div className=\"movies\">\n        {filteredMovies.map(movie => (\n          <MovieCard key={movie.imdbId} {...movie} />\n        ))}\n      </div>\n    );\n  },\n);\n\nMoviesList.propTypes = {\n  query: PropTypes.string.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n\nexport default React.memo(MoviesList);\n","import React, { Component } from 'react';\n\nimport { MovieSearch } from './components/MovieSearch';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\nimport './App.scss';\n\nexport class App extends Component {\n  state = {\n    query: '',\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      query: event.target.value,\n    });\n  }\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MovieSearch\n            query={query}\n            handleChange={this.handleChange}\n          />\n\n          <MoviesList\n            query={query}\n            movies={moviesFromServer}\n          />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}